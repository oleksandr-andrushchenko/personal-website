AWSTemplateFormatVersion: '2010-09-09'
Description: Personal Website Hosting with Contact Form Handling via Lambda, SES, SNS

Parameters:
  DomainName:
    Type: String
    Description: e.g. www.example.com
  HostedZoneId:
    Type: String
    Description: Route 53 Hosted Zone ID for your domain
  CertificateArn:
    Type: String
    Description: ARN of the ACM certificate in us-east-1 for CloudFront
  NotificationEmail:
    Type: String
    Description: Email address to notify on form submission
  NotificationPhone:
    Type: String
    Description: Phone number for SMS (e.g. +15551234567)
  TagProject:
    Type: String
    Description: Logical project identifier (e.g. PersonalWebsite)
  TagOwner:
    Type: String
    Description: Resource owner (e.g. Oleksandr)
  TagEnvironment:
    Type: String
    Description: Deployment environment (e.g. Production)
  TagRegion:
    Type: String
    Description: AWS region (e.g. us-west-2)

Resources:
  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-site"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Environment
          Value: !Ref TagEnvironment
        - Key: Project
          Value: !Ref TagProject
        - Key: Owner
          Value: !Ref TagOwner
        - Key: Region
          Value: !Ref TagRegion

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontOAI
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOAI}"
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${SiteBucket}/*"

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "Access Identity for ${DomainName}"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases: [ !Ref DomainName ]
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: s3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [ GET, HEAD ]
          CachedMethods: [ GET, HEAD ]
          MinTTL: 31536000        # 1 year
          DefaultTTL: 31536000
          MaxTTL: 31536000
          ForwardedValues:
            QueryString: false
            Headers:
              - Origin
        Origins:
          - Id: s3Origin
            DomainName: !GetAtt SiteBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOAI}"
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
        CustomErrorResponses:
          - ErrorCode: 403
            ResponsePagePath: "/404.html"
            ResponseCode: 404
            ErrorCachingMinTTL: 300
          - ErrorCode: 404
            ResponsePagePath: "/404.html"
            ResponseCode: 404
            ErrorCachingMinTTL: 300
      Tags:
        - Key: Environment
          Value: !Ref TagEnvironment
        - Key: Project
          Value: !Ref TagProject
        - Key: Owner
          Value: !Ref TagOwner
        - Key: Region
          Value: !Ref TagRegion

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

  ContactFormTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${AWS::StackName}-contact-form-topic"
      Subscription:
        - Protocol: email
          Endpoint: !Ref NotificationEmail
        - Protocol: sms
          Endpoint: !Ref NotificationPhone
      Tags:
        - Key: Environment
          Value: !Ref TagEnvironment
        - Key: Project
          Value: !Ref TagProject
        - Key: Owner
          Value: !Ref TagOwner
        - Key: Region
          Value: !Ref TagRegion

  ContactFormFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-contact-form-function-role"
      Description: Role for Lambda function to send emails via SES
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ContactFormPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !GetAtt ContactFormTopic.TopicArn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
      Tags:
        - Key: Environment
          Value: !Ref TagEnvironment
        - Key: Project
          Value: !Ref TagProject
        - Key: Owner
          Value: !Ref TagOwner
        - Key: Region
          Value: !Ref TagRegion

  ContactFormFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-contact-form-function"
      Description: Lambda function to send emails via SES
      Handler: app.handler
      Role: !GetAtt ContactFormFunctionRole.Arn
      Runtime: python3.12
      Timeout: 10
      Environment:
        Variables:
          CONTACT_TOPIC_ARN: !Ref ContactFormTopic
          ALLOWED_ORIGIN: !Sub "https://${DomainName}"
      Tags:
        - Key: Environment
          Value: !Ref TagEnvironment
        - Key: Project
          Value: !Ref TagProject
        - Key: Owner
          Value: !Ref TagOwner
        - Key: Region
          Value: !Ref TagRegion
      Code:
        S3Bucket: !Sub "${AWS::StackName}-code"
        S3Key: contact-form-function.zip

  ContactFormFunctionUrl:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !GetAtt ContactFormFunction.Arn
      Cors:
        AllowOrigins:
          - !Sub "https://${DomainName}"
        AllowMethods: [ "POST" ]
        AllowHeaders: [ "Content-Type" ]
        MaxAge: 86400

  ContactFormFunctionUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: !Ref ContactFormFunction
      Principal: "*"
      FunctionUrlAuthType: NONE

  ContactFormFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${ContactFormFunction}"
      RetentionInDays: 14  # or 3, 7, 30, 90, etc.
      Tags:
        - Key: Environment
          Value: !Ref TagEnvironment
        - Key: Project
          Value: !Ref TagProject
        - Key: Owner
          Value: !Ref TagOwner
        - Key: Region
          Value: !Ref TagRegion

Outputs:
  WebsiteURL:
    Value: !Sub "https://${DomainName}"
    Description: Public URL (served via CloudFront)
  CloudFrontURL:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Description: Direct CloudFront URL
  CloudFrontDistributionId:
    Value: !GetAtt CloudFrontDistribution.Id
    Description: The CloudFront distribution ID
  FormLambdaName:
    Value: !Ref ContactFormFunction
  NotificationTopicArn:
    Value: !Ref ContactFormTopic
  ContactFormFunctionRoleName:
    Value: !Ref ContactFormFunctionRole
    Description: IAM Role name for the Lambda contact form handler
  LambdaLogGroupName:
    Value: !Ref ContactFormFunctionLogGroup
    Description: CloudWatch log group for the contact form Lambda
  ContactFormEndpoint:
    Description: Public HTTPS endpoint for contact form
    Value: !GetAtt ContactFormFunctionUrl.FunctionUrl